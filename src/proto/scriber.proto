syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

package com.polymerlabs.scriber;

// Logging level definitions
enum Level {
  DEBUG = 0;
  INFO = 1;
  WARN = 2;
  ERROR = 3;
  FATAL = 4;
}

// Describes details of the application for a log
message Application {
  // UUID for the application
  google.protobuf.StringValue application_uuid = 1;
  // Application version
  google.protobuf.StringValue version = 2;
}

// Describes details of the client for a log
message Client {
  // UUID for the application
  google.protobuf.StringValue client_uuid = 1;
}

// Request message to create a new log
message PushLogRequest {
  // Details of the originating application
  Application application = 1;
  // GUID for the client
  Client client = 2;
  // Logging level
  Level level = 3;
  // Source class or file name
  google.protobuf.StringValue source = 4;
  // Log message
  google.protobuf.StringValue message = 5;
  // Stack trace, if available
  google.protobuf.StringValue trace = 6;
  // Optional metadata
  google.protobuf.Struct metadata = 7;
  // Time this log was reported
  google.protobuf.Timestamp reported_time = 8;
}

// Message request to create a new wave log
message PushWaveRequest {
  // Details of the originating application
  Application application = 1;
  // GUID for the client
  Client client = 2;
  // Time this log was reported
  google.protobuf.Timestamp reported_time = 3;
}

service ScriberApi {
  // Push a new log to the server.
  rpc pushLog(PushLogRequest) returns (google.protobuf.Empty);
  // Push a new wave to the server.
  rpc pushWave(PushWaveRequest) returns (google.protobuf.Empty);
}
